<!-- <?xml version="1.0" ?>
<sdf version="1.6">
  <model name="line_following_robot">
    <pose>0 0 0 0 0 0</pose> -->

    <!-- Base Link -->
    <!-- <link name="base_link">
      <pose>0 0 0.05 0 0 0</pose>
      <inertial>
         <mass>1.0</mass>
         <inertia>
            <ixx>0.01</ixx>
            <iyy>0.01</iyy>
            <izz>0.01</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="base_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/waffle_pi_base.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </collision>
      <visual name="base_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/waffle_pi_base.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </visual>
    </link> -->

    <!-- Left Wheel -->
    <!-- <link name="left_wheel">
      <pose>0 0.15 0.05 0 0 0</pose>
      <inertial>
         <mass>0.2</mass>
         <inertia>
            <ixx>0.001</ixx>
            <iyy>0.001</iyy>
            <izz>0.001</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="left_wheel_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </collision>
      <visual name="left_wheel_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </visual>
    </link> -->

    <!-- Right Wheel -->
    <!-- <link name="right_wheel">
      <pose>0 -0.15 0.05 0 0 0</pose>
      <inertial>
         <mass>0.2</mass>
         <inertia>
            <ixx>0.001</ixx>
            <iyy>0.001</iyy>
            <izz>0.001</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="right_wheel_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </collision>
      <visual name="right_wheel_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </visual>
    </link> -->

    <!-- Camera Link with Sensor -->
    <!-- <link name="camera_link">
      <pose>0 0 0.15 0 -0.785 0</pose>
      <inertial>
         <mass>0.05</mass>
         <inertia>
            <ixx>0.0001</ixx>
            <iyy>0.0001</iyy>
            <izz>0.0001</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="camera_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <box>
             <size>0.1 0.1 0.1</size>
           </box>
         </geometry>
      </collision>
      <visual name="camera_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <box>
             <size>0.1 0.1 0.1</size>
           </box>
         </geometry>
         <material>
           <ambient>0 0 1 1</ambient>
           <diffuse>0 0 1 1</diffuse>
         </material>
      </visual> -->
      <!-- Add the Camera Sensor here -->
      <!-- <sensor type="camera" name="camera_sensor">
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
        </camera>
        <plugin name="gazebo_ros_camera" filename="libgazebo_ros_camera.so">
          <ros>
            <remapping>image_raw:=camera/image_raw</remapping>
            <remapping>camera_info:=camera/camera_info</remapping>
          </ros>
          <frame_name>camera_link</frame_name>
        </plugin>
      </sensor>
    </link> -->

    <!-- Joints -->
    <!-- <joint name="left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>left_wheel</child>
      <pose>0 0.15 0.05 0 0 0</pose>
      <axis>
         <xyz>0 0 1</xyz>
         <limit>
           <lower>-1e16</lower>
           <upper>1e16</upper>
           <effort>1e5</effort>
           <velocity>1000</velocity>
         </limit>
      </axis>
    </joint>

    <joint name="right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>right_wheel</child>
      <pose>0 -0.15 0.05 0 0 0</pose>
      <axis>
         <xyz>0 0 1</xyz>
         <limit>
           <lower>-1e16</lower>
           <upper>1e16</upper>
           <effort>1e5</effort>
           <velocity>1000</velocity>
         </limit>
      </axis>
    </joint> -->

    <!-- Diff Drive Plugin -->
    <!-- <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so"> -->
      <!-- Reference joint names must match our SDF joint names -->
      <!-- <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.3</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      <torque>30</torque>
      <command_topic>cmd_vel</command_topic>
      <odom_topic>odom</odom_topic>
      <odom_frame>odom</odom_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <update_rate>30</update_rate>
    </plugin> -->

    <!-- Joint State Publisher Plugin -->
   <!-- <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
  <update_rate>30</update_rate>
  <joint_name>left_wheel_joint right_wheel_joint</joint_name>
</plugin>

  </model>
</sdf> -->



<?xml version="1.0" ?>
<sdf version="1.6">
  <model name="line_following_robot">
    <pose>0 0 0 0 0 0</pose>
    
    <!-- Base Link -->
    <link name="base_link">
      <pose>0 0 0.05 0 0 0</pose>
      <inertial>
         <mass>1.0</mass>
         <inertia>
            <ixx>0.01</ixx>
            <iyy>0.01</iyy>
            <izz>0.01</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="base_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/waffle_pi_base.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </collision>
      <visual name="base_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/waffle_pi_base.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </visual>
    </link>
    
    <!-- Left Wheel -->
    <link name="left_wheel">
      <pose>0 0.15 0.05 0 0 0</pose>
      <inertial>
         <mass>0.2</mass>
         <inertia>
            <ixx>0.001</ixx>
            <iyy>0.001</iyy>
            <izz>0.001</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="left_wheel_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </collision>
      <visual name="left_wheel_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </visual>
    </link>
    
    <!-- Right Wheel -->
    <link name="right_wheel">
      <pose>0 -0.15 0.05 0 0 0</pose>
      <inertial>
         <mass>0.2</mass>
         <inertia>
            <ixx>0.001</ixx>
            <iyy>0.001</iyy>
            <izz>0.001</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="right_wheel_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </collision>
      <visual name="right_wheel_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <mesh>
             <uri>model://line_following_robot/tire.dae</uri>
             <scale>1 1 1</scale>
           </mesh>
         </geometry>
      </visual>
    </link>
    
    <!-- Camera Link with Sensor for Line Following -->
    <link name="camera_link">
      <!-- Tilted downward to view the floor/track -->
      <pose>0 0 0.15 0 -0.785 0</pose>
      <inertial>
         <mass>0.05</mass>
         <inertia>
            <ixx>0.0001</ixx>
            <iyy>0.0001</iyy>
            <izz>0.0001</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <collision name="camera_collision">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <box>
             <size>0.1 0.1 0.1</size>
           </box>
         </geometry>
      </collision>
      <visual name="camera_visual">
         <pose>0 0 0 0 0 0</pose>
         <geometry>
           <box>
             <size>0.1 0.1 0.1</size>
           </box>
         </geometry>
         <material>
           <ambient>0 0 1 1</ambient>
           <diffuse>0 0 1 1</diffuse>
         </material>
      </visual>
      <!-- Camera Sensor Definition -->
      <sensor type="camera" name="camera_sensor">
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <!-- Added noise parameters (similar to TurtleBot3) -->
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="gazebo_ros_camera" filename="libgazebo_ros_camera.so">
          <ros>
            <remapping>image_raw:=camera/image_raw</remapping>
            <remapping>camera_info:=camera/camera_info</remapping>
          </ros>
          <frame_name>camera_link</frame_name>
        </plugin>
      </sensor>
    </link>
    
    <!-- IMU Link (added for additional sensor data) -->
    <link name="imu_link">
      <pose>0 0 0.1 0 0 0</pose>
      <inertial>
         <mass>0.05</mass>
         <inertia>
            <ixx>0.0002</ixx>
            <iyy>0.0002</iyy>
            <izz>0.0002</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
         </inertia>
      </inertial>
      <!-- IMU Sensor Definition -->
      <sensor type="imu" name="imu_sensor">
        <always_on>true</always_on>
        <update_rate>200</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.0002</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.0002</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.0002</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.017</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.017</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.017</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="gazebo_ros_imu_sensor" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <remapping>imu:=imu/data</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>
    
    <!-- Joints -->
    <!-- Fixed joint to attach the IMU link to the base -->
    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose>0 0 0.1 0 0 0</pose>
    </joint>
    
    <!-- Left Wheel Joint -->
    <joint name="left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>left_wheel</child>
      <pose>0 0.15 0.05 0 0 0</pose>
      <axis>
         <xyz>0 0 1</xyz>
         <limit>
           <lower>-1e16</lower>
           <upper>1e16</upper>
           <effort>1e5</effort>
           <velocity>1000</velocity>
         </limit>
      </axis>
    </joint>
    
    <!-- Right Wheel Joint -->
    <joint name="right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>right_wheel</child>
      <pose>0 -0.15 0.05 0 0 0</pose>
      <axis>
         <xyz>0 0 1</xyz>
         <limit>
           <lower>-1e16</lower>
           <upper>1e16</upper>
           <effort>1e5</effort>
           <velocity>1000</velocity>
         </limit>
      </axis>
    </joint>
    
    <!-- Diff Drive Controller Plugin -->
    <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.3</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      <torque>30</torque>
      <command_topic>cmd_vel</command_topic>
      <odom_topic>odom</odom_topic>
      <odom_frame>odom</odom_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <update_rate>30</update_rate>
    </plugin>
    
    <!-- Joint State Publisher Plugin -->
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <update_rate>30</update_rate>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
    </plugin>
    
  </model>
</sdf>
